services:
  frontend:
    build:
      context: ./frontend
      args:
        VITE_API_URL: http://localhost:5000
    ports:
      - "4173:4173"
    environment:
      - VITE_API_URL=http://localhost:5000
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
      - SQLALCHEMY_DATABASE_URI=postgresql://postgres:postgres@db:5432/patient_db
      - UPLOAD_FOLDER=/app/uploads
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./backend:/app
      - uploads_data:/app/uploads
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - app-network

  db:
    image: postgres:13
    environment:
      - POSTGRES_DB=patient_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - app-network

  celery_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A celery_app.celery worker --loglevel=info
    user: celery
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
      - SQLALCHEMY_DATABASE_URI=postgresql://postgres:postgres@db:5432/patient_db
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - MAIL_SERVER=smtp.gmail.com
      - MAIL_PORT=587
      - MAIL_USE_TLS=True
      - MAIL_USE_SSL=False
      - MAIL_USERNAME=${GMAIL_USERNAME}
      - MAIL_PASSWORD=${GMAIL_APP_PASSWORD}
      - MAILTRAP_USERNAME=${MAILTRAP_USERNAME}
      - MAILTRAP_PASSWORD=${MAILTRAP_PASSWORD}
      - UPLOAD_FOLDER=/app/uploads
    volumes:
      - ./backend:/app
      - uploads_data:/app/uploads
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
      backend:
        condition: service_started
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  uploads_data: